from cryptography.fernet import Fernet
import sqlite3

# Generate and save a key (do this once)
# key = Fernet.generate_key()
# with open("secret.key", "wb") as key_file:
#     key_file.write(key)

# Load the key
with open("secret.key", "rb") as key_file:
    key = key_file.read()
cipher_suite = Fernet(key)

# SQLite setup
conn = sqlite3.connect('password_manager.db')
cursor = conn.cursor()
cursor.execute('''CREATE TABLE IF NOT EXISTS passwords 
                  (id INTEGER PRIMARY KEY, service TEXT, username TEXT, password TEXT)''')

def add_password(service, username, password):
    encrypted_password = cipher_suite.encrypt(password.encode())
    cursor.execute("INSERT INTO passwords (service, username, password) VALUES (?, ?, ?)",
                   (service, username, encrypted_password))
    conn.commit()

def retrieve_password(service):
    cursor.execute("SELECT username, password FROM passwords WHERE service=?", (service,))
    record = cursor.fetchone()
    if record:
        username, encrypted_password = record
        decrypted_password = cipher_suite.decrypt(encrypted_password).decode()
        return username, decrypted_password
    return None

# Add a password
add_password("Gmail", "user@gmail.com", "securepassword123")

# Retrieve a password
result = retrieve_password("Gmail")
if result:
    print(f"Username: {result[0]}, Password: {result[1]}")
else:
    print("Service not found.")
